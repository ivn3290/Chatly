{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","reducer.js","Login.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","props","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","room","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b919540.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDqWq1kcSEIgjGaMXJfn4ze2pm2NTB_LXk\",\r\n    authDomain: \"whatsapp-clone-fa4d6.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-fa4d6\",\r\n    storageBucket: \"whatsapp-clone-fa4d6.appspot.com\",\r\n    messagingSenderId: \"902491452621\",\r\n    appId: \"1:902491452621:web:c73be3a2cee96fd62e2584\",\r\n    measurementId: \"G-ZPJ70HEXXR\"\r\n  };\r\n\r\n  const firebaseApp =firebase.initializeApp(firebaseConfig);\r\n  const db =firebaseApp.firestore();\r\n  const auth =firebase.auth();\r\n  const provider =new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { auth, provider};\r\n  export default db;","import React, { useEffect, useState } from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./SidebarChat.css\";\r\nimport db from \"./firebase\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction SidebarChat({ id, name, addNewChat}) {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\");\r\n    useEffect(() => {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat\");\r\n\r\n        if (roomName) {\r\n            //do some clever database stuff....\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return !addNewChat ? (\r\n        <Link to = {`/rooms/${id}`}>\r\n        <div className=\"sidebarChat\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n            <div className=\"sidebarChat__info\">\r\n              <h2>{name}</h2>    \r\n              <p>{messages[0]?.message}</p>\r\n            </div> \r\n        </div>\r\n        </Link>\r\n    ): (\r\n        <div onClick={createChat}\r\n        className=\"sidebarChat\">\r\n            <h2>Add new Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat;\r\n","  \r\nimport React, {createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction Sidebar(props) {\r\n    const [rooms, setRooms]= useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n      const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n          setRooms(snapshot.docs.map(doc => (\r\n              {\r\n                  id: doc.id,\r\n                  data: doc.data()\r\n              }\r\n          )\r\n\r\n          ))\r\n      ));\r\n\r\n      return () => {\r\n          unsubscribe();\r\n      }\r\n  },[]);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n          <div className=\"sidebar__header\">\r\n           <Avatar src={user?.photoURL}/>\r\n            <div className=\"sidebar__headerRight\">\r\n                <IconButton>\r\n                  <DonutLargeIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <ChatIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <MoreVertIcon />\r\n                </IconButton>\r\n                \r\n            </div>\r\n          </div>\r\n          <div className=\"sidebar__search\">\r\n             <div className=\"sidebar__searchContainer\">\r\n              <SearchOutlined/>\r\n              <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n             </div>\r\n          </div>\r\n          <div className=\"sidebar__chats\">\r\n              <SidebarChat addNewChat/>\r\n              {rooms.map(room => (\r\n                <SidebarChat key={room.id} id={room.id}\r\n                name={room.data.name} />\r\n              ))}\r\n          </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Login.css';\r\nimport {auth,provider} from './firebase';\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n    const [{},dispatch] = useStateValue();\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n            <img src=\"https://99designs-blog.imgix.net/blog/wp-content/uploads/2017/04/Capp.jpg?auto=format&q=60&fit=max&w=930\" alt=\"Chatly.jpeg\"/>\r\n            <div className=\"login__text\">\r\n                <h1>Sign in to Chatly</h1>\r\n            </div>\r\n            <Button type=\"submit\" onClick={signIn}>Sign in with Google</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport \"./Chat.css\";\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from \"./firebase\";\r\nimport firebase from 'firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);//to track messages of ex dance room(user)\r\n\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n      if (roomId) {\r\n        db.collection('rooms')\r\n          .doc(roomId)\r\n          .onSnapshot(snapshot => \r\n          (setRoomName(snapshot.data().name)))\r\n\r\n          db.collection('rooms')\r\n          .doc(roomId)\r\n          .collection(\"messages\")\r\n          .orderBy(\"timestamp\",\"asc\")\r\n          .onSnapshot(snapshot => {\r\n            setMessages(snapshot.docs.map(doc => \r\n            doc.data()))\r\n        });\r\n      }\r\n    }, [roomId])//roomId is a dependency for useEffect\r\n    \r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, []);\r\n\r\n    const sendMessage = (e) => {\r\n       e.preventDefault();\r\n       console.log(\"You types >>>\", input);\r\n\r\n       db.collection('rooms').doc(roomId).collection('messages').add({\r\n        message: input,\r\n        name: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n       setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n          <div className=\"chat__header\">\r\n              <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n              <div className=\"chat__headerInfo\">\r\n                  <h3>{roomName}</h3>\r\n                  <p>\r\n                  Last seen {\" \"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                  </p>\r\n              </div>\r\n              <div className=\"chat__headerRight\">\r\n                <IconButton>\r\n                  <SearchOutlined />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <AttachFile />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <MoreVert/>\r\n                </IconButton>\r\n              </div>\r\n          </div>\r\n          <div className=\"chat__body\">\r\n             {messages.map((message)=>(\r\n              <p className={`chat__message ${message.name === user.displayName && \"chat__reciever\"}`}>\r\n              <span className=\"chat__name\">\r\n              {message.name}</span>\r\n                  {message.message}\r\n                <span className=\"chat__timestamp\">\r\n                {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                </span>  \r\n              </p>\r\n              ))}\r\n          </div>\r\n          <div className=\"chat__footer\">\r\n              <InsertEmoticonIcon />\r\n              <form>\r\n                  <input value={input} onChange={(e) => setInput(e.target.value)} \r\n                  placeholder=\"Type a message\" type=\"text\"/>\r\n                  <button onClick={sendMessage} \r\n                  type=\"submit\">Send a message</button>\r\n              </form>\r\n              <MicIcon />\r\n          </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","import React, {useState} from \"react\";\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Login from \"./Login\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {useStateValue} from './StateProvider';\n\nfunction App() {\n  const [{user},dispatch] = useStateValue();\n\n  return (\n    // BEM naming convention\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ):(\n        <div className=\"app__body\">\n        <Router>\n        <Sidebar />\n         <Switch>\n         \n         <Route path=\"/rooms/:roomId\">\n          <Chat />\n         </Route>\n         <Route path=\"/\">\n          <Chat />\n         </Route>\n          </Switch> \n        </Router>\n       </div>\n      )}\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState}\n    reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}